# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nyFIWcRbJU7y4LGdOAbppmwb1gM5IJt4
"""

import numpy as np
import pandas as pd
import tensorflow as tf 
import matplotlib.pyplot as plt
tf.__version__

dataset = pd.read_csv("News_data_Classification.csv")
X = dataset.iloc[:,[2]].values
Y = dataset.iloc[:,-2].values

from sklearn.preprocessing import LabelEncoder as laben

le = laben()
Y = le.fit_transform(Y)

from sklearn.model_selection import train_test_split
sentence_train, sentence_test,y_train,y_test = train_test_split(X,Y,test_size=0.25, random_state=1000)

from sklearn.feature_extraction.text import CountVectorizer
vectorizer = CountVectorizer()
vectorizer.fit(sentence_train.ravel())
X_train = vectorizer.transform(sentence_train.ravel())
X_test = vectorizer.transform(sentence_test.ravel())

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression()
classifier.max_iter = 3000
classifier.fit(X_train, y_train)
score = classifier.score(X_test, y_test)
print("Accuracy:", score)

print("Insert a phrase: ")
phrase = [input()]

X = vectorizer.transform(phrase)
classifier.predict(X)[0]